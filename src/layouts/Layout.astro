---
import '../components/DesignSystem.astro';

export interface Props {
	title?: string;
	description?: string;
	image?: string;
}

const { title = "SnapSkillz - Master Your Skills with AI-Powered Learning", description = "Master Your Skills with AI-Powered Learning - SnapSkillz offers AI quizzes, mock interviews, and study resources.", image = "/og-image.jpg" } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<title>{title}</title>
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={image} />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={Astro.url} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={image} />

		<!-- Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
		<link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600;700&display=swap" rel="stylesheet">
	</head>
	<body class="font-sans text-gray-900 antialiased selection:bg-blue-100 selection:text-blue-900">
		<!-- Background Pattern -->
		<div class="fixed inset-0 -z-10">
			<div class="absolute inset-0 bg-gradient-to-br from-blue-50/30 via-white to-purple-50/30"></div>
			<div class="absolute inset-0 bg-[radial-gradient(circle_at_1px_1px,rgba(59,130,246,0.08)_1px,transparent_0)] bg-[length:24px_24px]"></div>
		</div>
		
		<slot />

		<!-- Global Scripts -->
		<script>
			// Smooth scroll for anchor links
			document.querySelectorAll('a[href^="#"]').forEach(anchor => {
				anchor.addEventListener('click', function (e) {
					e.preventDefault();
					const target = document.querySelector(this.getAttribute('href'));
					if (target) {
						target.scrollIntoView({
							behavior: 'smooth',
							block: 'start'
						});
					}
				});
			});

			// Intersection Observer for animations
			const observerOptions = {
				threshold: 0.1,
				rootMargin: '-50px'
			};

			const observer = new IntersectionObserver((entries) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						entry.target.classList.add('animate-fade-in-up');
					}
				});
			}, observerOptions);

			// Observe elements with data-animate attribute
			document.addEventListener('DOMContentLoaded', () => {
				const animateElements = document.querySelectorAll('[data-animate]');
				animateElements.forEach((element) => {
					observer.observe(element);
				});
			});

			// Add loading state management
			window.addEventListener('beforeunload', () => {
				document.body.classList.add('loading');
			});

			// Theme switching (for future dark mode)
			function setTheme(theme) {
				document.documentElement.setAttribute('data-theme', theme);
				localStorage.setItem('theme', theme);
			}

			// Initialize theme
			const savedTheme = localStorage.getItem('theme') || 'light';
			setTheme(savedTheme);
		</script>
	</body>
</html>

<style is:global>
	/* Custom font loading */
	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 100 900;
		font-display: swap;
		src: url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
	}

	html {
		font-family: 'Inter', system-ui, sans-serif;
		scroll-behavior: smooth;
	}

	body {
		font-feature-settings: 'cv02', 'cv03', 'cv04', 'cv11';
		font-variation-settings: normal;
		text-rendering: optimizeLegibility;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}

	/* Loading state */
	body.loading {
		pointer-events: none;
		opacity: 0.8;
	}

	body.loading::before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 4px;
		background: linear-gradient(90deg, #3b82f6, #8b5cf6, #06b6d4);
		background-size: 200% 100%;
		animation: loading-bar 2s ease-in-out infinite;
		z-index: 9999;
	}

	@keyframes loading-bar {
		0% { transform: translateX(-100%); }
		100% { transform: translateX(100%); }
	}

	/* Enhanced focus styles */
	*:focus-visible {
		outline: 2px solid #3b82f6;
		outline-offset: 2px;
		border-radius: 4px;
	}

	/* Image optimization */
	img {
		max-width: 100%;
		height: auto;
		display: block;
	}

	/* Enhanced selection */
	::selection {
		background: rgba(59, 130, 246, 0.2);
		color: inherit;
	}

	/* Smooth scrolling for reduced motion users */
	@media (prefers-reduced-motion: reduce) {
		html {
			scroll-behavior: auto;
		}
		
		*,
		*::before,
		*::after {
			animation-duration: 0.01ms !important;
			animation-iteration-count: 1 !important;
			transition-duration: 0.01ms !important;
		}
	}

	/* High contrast mode support */
	@media (prefers-contrast: high) {
		.gradient-text,
		.gradient-text-primary,
		.gradient-text-secondary {
			background: none;
			color: currentColor;
		}
	}

	/* Dark mode preparation */
	[data-theme="dark"] {
		--color-gray-50: #1f2937;
		--color-gray-100: #374151;
		--color-gray-200: #4b5563;
		--color-gray-300: #6b7280;
		--color-gray-400: #9ca3af;
		--color-gray-500: #d1d5db;
		--color-gray-600: #e5e7eb;
		--color-gray-700: #f3f4f6;
		--color-gray-800: #f9fafb;
		--color-gray-900: #ffffff;
	}

	/* Utility classes for consistent spacing */
	.section-padding {
		@apply py-12 sm:py-16 lg:py-24;
	}

	.container-padding {
		@apply px-4 sm:px-6 lg:px-8;
	}

	/* Enhanced button hover effects */
	.btn:not(:disabled):hover {
		transform: translateY(-1px);
	}

	.btn:not(:disabled):active {
		transform: translateY(0);
	}

	/* Card enhancements */
	.card {
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.card:hover {
		transform: translateY(-4px);
	}

	/* Form enhancements */
	.form-input:focus,
	.form-select:focus,
	.form-textarea:focus {
		box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
	}

	/* Enhanced animations */
	@keyframes fadeInScale {
		from {
			opacity: 0;
			transform: scale(0.95);
		}
		to {
			opacity: 1;
			transform: scale(1);
		}
	}

	.animate-fade-in-scale {
		animation: fadeInScale 0.3s ease-out;
	}

	/* Print styles */
	@media print {
		.no-print {
			display: none !important;
		}
		
		body {
			background: white !important;
			color: black !important;
		}
		
		a {
			text-decoration: underline !important;
		}
	}
</style>
