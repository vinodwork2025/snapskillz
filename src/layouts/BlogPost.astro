---
import Layout from './Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
  title: string;
  description: string;
  author: string;
  publishDate: Date;
  category: string;
  tags: string[];
  readTime?: number;
  image?: string;
}

const { title, description, author, publishDate, category, tags, readTime, image } = Astro.props;

function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
}

function getCategoryColor(category: string): string {
  const colors = {
    programming: 'bg-blue-100 text-blue-600 border-blue-200',
    design: 'bg-purple-100 text-purple-600 border-purple-200',
    'data-science': 'bg-teal-100 text-teal-600 border-teal-200',
    business: 'bg-green-100 text-green-600 border-green-200',
    technology: 'bg-orange-100 text-orange-600 border-orange-200',
  };
  return colors[category] || 'bg-gray-100 text-gray-600 border-gray-200';
}
---

<Layout title={title} description={description}>
  <Header />
  
  <!-- Article Header with Gradient Background -->
  <section class="relative section-padding bg-gradient-to-br from-slate-50 via-blue-50 to-purple-100 overflow-hidden">
    <!-- Background Elements -->
    <div class="absolute inset-0">
      <div class="absolute top-20 left-10 w-32 h-32 bg-gradient-to-r from-blue-400/20 to-purple-400/20 rounded-full blur-2xl animate-float"></div>
      <div class="absolute bottom-20 right-20 w-24 h-24 bg-gradient-to-r from-purple-400/20 to-pink-400/20 rounded-full blur-xl animate-float" style="animation-delay: -1s;"></div>
      <div class="absolute top-1/3 right-1/4 w-16 h-16 bg-gradient-to-r from-teal-400/20 to-cyan-400/20 rounded-full blur-lg animate-float" style="animation-delay: -2s;"></div>
    </div>

    <div class="container-xl relative">
      <!-- Breadcrumb -->
      <nav class="mb-8" data-animate>
        <div class="flex items-center space-x-2 text-sm text-gray-600">
          <a href="/" class="hover:text-blue-600 transition-colors font-medium">Home</a>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
          <a href="/blog" class="hover:text-blue-600 transition-colors font-medium">Blog</a>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
          <span class="text-gray-900 font-medium">{title}</span>
        </div>
      </nav>

      <div class="max-w-4xl mx-auto">
        <!-- Article Meta -->
        <div class="text-center mb-12" data-animate>
          <div class="flex items-center justify-center gap-4 mb-6">
            <span class={`badge border ${getCategoryColor(category)}`}>
              {category.charAt(0).toUpperCase() + category.slice(1).replace('-', ' ')}
            </span>
            <div class="flex items-center text-gray-600 text-sm">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              {readTime} min read
            </div>
          </div>
          
          <h1 class="text-display-lg md:text-display-xl gradient-text-primary mb-6 leading-tight">
            {title}
          </h1>
          
          <p class="text-xl md:text-2xl text-gray-600 mb-8 leading-relaxed max-w-3xl mx-auto">
            {description}
          </p>
          
          <!-- Author Info -->
          <div class="flex items-center justify-center space-x-4 mb-8">
            <div class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xl font-bold shadow-lg">
              {author.split(' ').map(n => n[0]).join('')}
            </div>
            <div class="text-left">
              <div class="font-semibold text-gray-900 text-lg">{author}</div>
              <div class="text-gray-600">
                Published on {formatDate(publishDate)}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Article Content -->
  <article class="section-padding bg-white relative">
    <div class="container-sm">
      <!-- Article Body with Enhanced Typography -->
      <div class="prose prose-lg prose-blue max-w-none">
        <slot />
      </div>

      <!-- Tags Section -->
      <div class="mt-16 pt-8 border-t border-gray-200" data-animate>
        <div class="flex items-center space-x-3 mb-4">
          <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
          </svg>
          <span class="text-gray-700 font-semibold">Tags:</span>
        </div>
        <div class="flex flex-wrap gap-3">
          {tags.map(tag => (
            <span class="badge bg-gray-100 hover:bg-blue-50 hover:text-blue-600 text-gray-700 cursor-pointer transition-colors border border-gray-200 hover:border-blue-200">
              #{tag}
            </span>
          ))}
        </div>
      </div>

      <!-- Share Section -->
      <div class="mt-12 pt-8 border-t border-gray-200" data-animate>
        <div class="text-center">
          <h3 class="text-2xl font-bold text-gray-900 mb-6">Share this article</h3>
          <div class="flex items-center justify-center space-x-4">
            <button 
              onclick="shareOnTwitter()"
              class="btn btn-outline flex items-center space-x-2 text-blue-500 border-blue-500 hover:bg-blue-500 hover:text-white"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
              </svg>
              <span>Twitter</span>
            </button>
            
            <button 
              onclick="shareOnLinkedIn()"
              class="btn btn-outline flex items-center space-x-2 text-blue-700 border-blue-700 hover:bg-blue-700 hover:text-white"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
              <span>LinkedIn</span>
            </button>
            
            <button 
              onclick="copyLink()"
              class="btn btn-outline flex items-center space-x-2 text-gray-600 border-gray-600 hover:bg-gray-600 hover:text-white"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
              </svg>
              <span>Copy Link</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </article>

  <!-- Newsletter CTA -->
  <section class="section-padding bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 text-white relative overflow-hidden">
    <!-- Background Elements -->
    <div class="absolute inset-0">
      <div class="absolute top-10 left-10 w-40 h-40 bg-white/10 rounded-full blur-2xl"></div>
      <div class="absolute bottom-10 right-10 w-32 h-32 bg-white/10 rounded-full blur-xl"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-white/5 rounded-full blur-3xl"></div>
    </div>

    <div class="container-md relative" data-animate>
      <div class="text-center">
        <h2 class="text-display-md mb-6">Enjoyed this article?</h2>
        <p class="text-xl mb-10 text-blue-100 max-w-2xl mx-auto leading-relaxed">
          Subscribe to get more insights, learning tips, and career advice delivered straight to your inbox.
        </p>
        
        <form class="max-w-md mx-auto" onsubmit="handleNewsletterSignup(event)">
          <div class="flex flex-col sm:flex-row gap-4">
            <input
              type="email"
              placeholder="Enter your email address"
              class="flex-1 form-input bg-white/10 border-white/20 text-white placeholder-blue-200 focus:bg-white/20 backdrop-blur-sm"
              required
            >
            <button
              type="submit"
              class="btn btn-md bg-white text-blue-600 hover:bg-blue-50 font-bold px-8 hover:scale-105"
            >
              Subscribe
            </button>
          </div>
          <p class="text-sm text-blue-200 mt-4">
            Join 10,000+ learners. No spam, unsubscribe anytime.
          </p>
        </form>
      </div>
    </div>
  </section>

  <Footer />

  <script define:vars={{ title, category }}>
    function shareOnTwitter() {
      const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(window.location.href)}&hashtags=${category}`;
      window.open(url, '_blank', 'width=600,height=400');
    }

    function shareOnLinkedIn() {
      const url = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(window.location.href)}`;
      window.open(url, '_blank', 'width=600,height=400');
    }

    function copyLink() {
      navigator.clipboard.writeText(window.location.href).then(() => {
        // Show toast notification
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-scale';
        toast.textContent = 'Link copied to clipboard!';
        document.body.appendChild(toast);
        
        setTimeout(() => {
          toast.remove();
        }, 3000);
      }).catch(() => {
        alert('Failed to copy link. Please copy manually: ' + window.location.href);
      });
    }

    function handleNewsletterSignup(event) {
      event.preventDefault();
      const email = event.target.querySelector('input[type="email"]').value;
      
      // Show success message
      const form = event.target;
      const button = form.querySelector('button');
      const originalText = button.innerHTML;
      
      button.innerHTML = '✓ Subscribed!';
      button.disabled = true;
      button.className = button.className.replace('text-blue-600', 'text-green-600');
      
      setTimeout(() => {
        form.reset();
        button.innerHTML = originalText;
        button.disabled = false;
        button.className = button.className.replace('text-green-600', 'text-blue-600');
      }, 3000);
    }

    // Reading progress indicator
    function setupReadingProgress() {
      const article = document.querySelector('article');
      if (!article) return;

      const progressBar = document.createElement('div');
      progressBar.className = 'fixed top-0 left-0 h-1 bg-gradient-to-r from-blue-600 to-purple-600 z-50 transition-all duration-150';
      progressBar.style.width = '0%';
      document.body.appendChild(progressBar);

      function updateProgress() {
        const scrollPercent = (window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100;
        progressBar.style.width = Math.min(100, Math.max(0, scrollPercent)) + '%';
      }

      window.addEventListener('scroll', updateProgress);
      updateProgress();
    }

    document.addEventListener('DOMContentLoaded', setupReadingProgress);
  </script>
</Layout>

<style is:global>
  /* Enhanced Prose Styles for Blog Posts */
  .prose {
    color: #374151;
    line-height: 1.75;
  }

  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #111827;
    font-weight: 700;
    line-height: 1.25;
    margin-top: 2em;
    margin-bottom: 1em;
    scroll-margin-top: 100px;
  }

  .prose h1 {
    font-size: 2.5rem;
    margin-top: 0;
  }

  .prose h2 {
    font-size: 2rem;
    border-bottom: 2px solid #e5e7eb;
    padding-bottom: 0.5rem;
  }

  .prose h3 {
    font-size: 1.5rem;
    color: #1f2937;
  }

  .prose h4 {
    font-size: 1.25rem;
    color: #374151;
  }

  .prose p {
    margin-bottom: 1.5rem;
    text-align: justify;
  }

  .prose a {
    color: #3b82f6;
    text-decoration: none;
    font-weight: 500;
    border-bottom: 1px solid transparent;
    transition: all 0.2s;
  }

  .prose a:hover {
    color: #1d4ed8;
    border-bottom-color: #3b82f6;
  }

  .prose strong {
    color: #111827;
    font-weight: 600;
  }

  .prose code {
    background-color: #f1f5f9;
    color: #1e293b;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-family: 'JetBrains Mono', monospace;
    font-size: 0.875em;
    font-weight: 500;
    border: 1px solid #e2e8f0;
  }

  .prose pre {
    background-color: #1e293b;
    color: #e2e8f0;
    border-radius: 0.75rem;
    padding: 1.5rem;
    overflow-x: auto;
    margin: 2rem 0;
    border: 1px solid #334155;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }

  .prose pre code {
    background-color: transparent;
    color: inherit;
    padding: 0;
    border-radius: 0;
    font-size: 0.875rem;
    border: none;
  }

  .prose blockquote {
    border-left: 4px solid #3b82f6;
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: #4b5563;
    background-color: #f8fafc;
    padding: 1.5rem;
    border-radius: 0.5rem;
    position: relative;
  }

  .prose blockquote::before {
    content: '"';
    font-size: 4rem;
    color: #3b82f6;
    position: absolute;
    top: -0.5rem;
    left: 1rem;
    font-family: serif;
  }

  .prose ul, .prose ol {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .prose li {
    margin-bottom: 0.75rem;
    line-height: 1.75;
  }

  .prose ul li::marker {
    color: #3b82f6;
  }

  .prose ol li::marker {
    color: #3b82f6;
    font-weight: 600;
  }

  .prose hr {
    border: none;
    border-top: 2px solid #e5e7eb;
    margin: 3rem 0;
    position: relative;
  }

  .prose hr::after {
    content: '';
    position: absolute;
    top: -1px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
  }

  .prose img {
    border-radius: 0.75rem;
    margin: 2rem 0;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }

  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
    background-color: white;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .prose th,
  .prose td {
    padding: 1rem;
    text-align: left;
    border-bottom: 1px solid #e5e7eb;
  }

  .prose th {
    background-color: #f8fafc;
    font-weight: 600;
    color: #1f2937;
  }

  .prose tr:last-child td {
    border-bottom: none;
  }

  /* Code syntax highlighting improvements */
  .prose pre[class*="language-"] {
    position: relative;
  }

  .prose pre[class*="language-"]::before {
    content: attr(data-language);
    position: absolute;
    top: 0.5rem;
    right: 1rem;
    background: rgba(255, 255, 255, 0.1);
    color: #e2e8f0;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    text-transform: uppercase;
    font-weight: 600;
  }

  /* Interactive elements */
  .prose details {
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: 0.5rem;
    padding: 1rem;
    margin: 1rem 0;
  }

  .prose summary {
    cursor: pointer;
    font-weight: 600;
    color: #1f2937;
    margin-bottom: 0.5rem;
  }

  .prose summary:hover {
    color: #3b82f6;
  }

  /* Footnotes */
  .prose .footnote {
    font-size: 0.875rem;
    color: #6b7280;
    border-top: 1px solid #e5e7eb;
    padding-top: 1rem;
    margin-top: 2rem;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .prose {
      font-size: 1rem;
    }

    .prose h1 {
      font-size: 2rem;
    }

    .prose h2 {
      font-size: 1.75rem;
    }

    .prose h3 {
      font-size: 1.375rem;
    }

    .prose pre {
      padding: 1rem;
      margin: 1rem -1rem;
      border-radius: 0;
    }
  }
</style>