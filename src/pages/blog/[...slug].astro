---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Get related posts (same category, excluding current post)
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(post => post.data.category === entry.data.category && post.slug !== entry.slug)
  .slice(0, 3);

function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
}

function getCategoryColor(category: string): string {
  const colors = {
    programming: 'bg-blue-100 text-blue-600',
    design: 'bg-purple-100 text-purple-600',
    'data-science': 'bg-teal-100 text-teal-600',
    business: 'bg-green-100 text-green-600',
    technology: 'bg-orange-100 text-orange-600',
  };
  return colors[category] || 'bg-gray-100 text-gray-600';
}
---

<Layout>
  <Header />
  
  <main class="pt-20 min-h-screen bg-white">
    <!-- Article Header -->
    <article class="container mx-auto px-4 py-12 max-w-4xl">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <div class="flex items-center space-x-2 text-sm text-gray-600">
          <a href="/" class="hover:text-blue-600 transition-colors">Home</a>
          <span>/</span>
          <a href="/blog" class="hover:text-blue-600 transition-colors">Blog</a>
          <span>/</span>
          <span class="text-gray-900">{entry.data.title}</span>
        </div>
      </nav>

      <!-- Article Meta -->
      <div class="mb-8">
        <div class="flex items-center gap-4 mb-6">
          <span class={`px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(entry.data.category)}`}>
            {entry.data.category.charAt(0).toUpperCase() + entry.data.category.slice(1).replace('-', ' ')}
          </span>
          {entry.data.featured && (
            <span class="bg-yellow-100 text-yellow-600 px-3 py-1 rounded-full text-sm font-medium">Featured</span>
          )}
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {entry.data.title}
        </h1>
        
        <p class="text-xl text-gray-600 mb-8 leading-relaxed">
          {entry.data.description}
        </p>
        
        <div class="flex items-center justify-between border-t border-b border-gray-200 py-6">
          <div class="flex items-center space-x-4">
            <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold">
              {entry.data.author.split(' ').map(n => n[0]).join('')}
            </div>
            <div>
              <div class="font-semibold text-gray-900">{entry.data.author}</div>
              <div class="text-sm text-gray-600">
                Published on {formatDate(entry.data.publishDate)}
              </div>
            </div>
          </div>
          
          <div class="flex items-center space-x-6 text-sm text-gray-600">
            <div class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>{entry.data.readTime} min read</span>
            </div>
            
            <button class="flex items-center space-x-2 hover:text-blue-600 transition-colors" onclick="shareArticle()">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
              </svg>
              <span>Share</span>
            </button>
          </div>
        </div>
      </div>

      <!-- Article Content -->
      <div class="prose prose-lg max-w-none">
        <Content />
      </div>

      <!-- Tags -->
      <div class="mt-12 pt-8 border-t border-gray-200">
        <div class="flex items-center space-x-2 mb-4">
          <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
          </svg>
          <span class="text-gray-700 font-medium">Tags:</span>
        </div>
        <div class="flex flex-wrap gap-2">
          {entry.data.tags.map(tag => (
            <span class="bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm cursor-pointer transition-colors">
              {tag}
            </span>
          ))}
        </div>
      </div>

      <!-- Share Buttons -->
      <div class="mt-8 pt-8 border-t border-gray-200">
        <div class="flex items-center justify-between">
          <h3 class="text-lg font-semibold text-gray-900">Share this article</h3>
          <div class="flex items-center space-x-4">
            <button 
              onclick="shareOnTwitter()"
              class="flex items-center space-x-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
              </svg>
              <span>Twitter</span>
            </button>
            
            <button 
              onclick="shareOnLinkedIn()"
              class="flex items-center space-x-2 bg-blue-700 text-white px-4 py-2 rounded-lg hover:bg-blue-800 transition-colors"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
              <span>LinkedIn</span>
            </button>
            
            <button 
              onclick="copyLink()"
              class="flex items-center space-x-2 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
              </svg>
              <span>Copy Link</span>
            </button>
          </div>
        </div>
      </div>
    </article>

    <!-- Related Posts -->
    {relatedPosts.length > 0 && (
      <section class="py-16 bg-gray-50 border-t">
        <div class="container mx-auto px-4 max-w-6xl">
          <h2 class="text-3xl font-bold text-gray-900 mb-8 text-center">Related Articles</h2>
          
          <div class="grid md:grid-cols-3 gap-8">
            {relatedPosts.map(post => (
              <article class="bg-white rounded-xl border hover:shadow-lg transition-all duration-300 p-6">
                <div class="flex items-center gap-3 mb-4">
                  <span class={`px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(post.data.category)}`}>
                    {post.data.category.charAt(0).toUpperCase() + post.data.category.slice(1).replace('-', ' ')}
                  </span>
                </div>
                
                <h3 class="text-lg font-bold text-gray-900 mb-3 hover:text-blue-600 transition-colors">
                  <a href={`/blog/${post.slug}`} class="hover:underline">{post.data.title}</a>
                </h3>
                
                <p class="text-gray-600 text-sm mb-4 line-clamp-3">{post.data.description}</p>
                
                <div class="flex items-center justify-between text-sm">
                  <div class="flex items-center space-x-2">
                    <div class="w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                      {post.data.author.split(' ').map(n => n[0]).join('')}
                    </div>
                    <span class="text-gray-700">{post.data.author}</span>
                  </div>
                  
                  <div class="flex items-center space-x-4 text-gray-500">
                    <span>{post.data.readTime} min read</span>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Newsletter CTA -->
    <section class="py-16 bg-gradient-to-br from-blue-600 to-purple-600 text-white">
      <div class="container mx-auto px-4 text-center max-w-2xl">
        <h2 class="text-3xl font-bold mb-4">Enjoyed this article?</h2>
        <p class="text-xl mb-8 text-blue-100">
          Subscribe to get more insights and tips delivered to your inbox.
        </p>
        
        <form class="flex gap-4" onsubmit="handleNewsletterSignup(event)">
          <input
            type="email"
            placeholder="Enter your email"
            class="flex-1 px-4 py-3 rounded-lg text-gray-900 focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-blue-600"
            required
          >
          <button
            type="submit"
            class="bg-white text-blue-600 px-6 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors"
          >
            Subscribe
          </button>
        </form>
      </div>
    </section>
  </main>

  <script define:vars={{ title: entry.data.title, slug: entry.slug }}>
    function shareArticle() {
      if (navigator.share) {
        navigator.share({
          title: title,
          url: window.location.href
        });
      } else {
        copyLink();
      }
    }

    function shareOnTwitter() {
      const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(window.location.href)}`;
      window.open(url, '_blank', 'width=600,height=400');
    }

    function shareOnLinkedIn() {
      const url = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(window.location.href)}`;
      window.open(url, '_blank', 'width=600,height=400');
    }

    function copyLink() {
      navigator.clipboard.writeText(window.location.href).then(() => {
        alert('Link copied to clipboard!');
      });
    }

    function handleNewsletterSignup(event) {
      event.preventDefault();
      const email = event.target.querySelector('input[type="email"]').value;
      alert(`Thank you for subscribing with ${email}!`);
      event.target.reset();
    }
  </script>
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    color: #374151;
  }

  .prose h2 {
    font-size: 1.875rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #111827;
  }

  .prose h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: #111827;
  }

  .prose p {
    margin-bottom: 1rem;
    line-height: 1.75;
  }

  .prose pre {
    background-color: #f9fafb;
    border: 1px solid #e5e7eb;
    border-radius: 0.5rem;
    padding: 1rem;
    overflow-x: auto;
    margin: 1rem 0;
  }

  .prose code {
    background-color: #f3f4f6;
    color: #1f2937;
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  .prose pre code {
    background-color: transparent;
    padding: 0;
  }

  .prose ul, .prose ol {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  .prose blockquote {
    border-left: 4px solid #3b82f6;
    padding-left: 1rem;
    margin: 1rem 0;
    font-style: italic;
    color: #6b7280;
  }

  .prose hr {
    border: none;
    border-top: 1px solid #e5e7eb;
    margin: 2rem 0;
  }
</style>