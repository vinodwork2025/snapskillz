---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';

const allBlogPosts = await getCollection('blog');
const sortedPosts = allBlogPosts.sort((a, b) => 
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

const featuredPosts = sortedPosts.filter(post => post.data.featured);
const regularPosts = sortedPosts.filter(post => !post.data.featured);

const categories = [...new Set(allBlogPosts.map(post => post.data.category))];

function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
}

function getCategoryColor(category: string): string {
  const colors = {
    programming: 'bg-blue-100 text-blue-600',
    design: 'bg-purple-100 text-purple-600',
    'data-science': 'bg-teal-100 text-teal-600',
    business: 'bg-green-100 text-green-600',
    technology: 'bg-orange-100 text-orange-600',
  };
  return colors[category] || 'bg-gray-100 text-gray-600';
}
---

<Layout>
  <Header />
  
  <main class="pt-24 min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50">
    <!-- Header Section -->
    <section class="py-24 bg-white">
      <div class="container mx-auto px-4 text-center">
        <div class="inline-flex items-center bg-gradient-to-r from-blue-500/10 to-purple-500/10 border border-blue-200/50 rounded-full px-4 py-2 mb-6">
          <span class="text-sm font-medium text-gray-700">SnapSkillz Blog</span>
        </div>
        <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent leading-[1.1] pb-2">
          Learning Insights & Tips
        </h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
          Discover the latest trends in tech, learning strategies, and career advice from industry experts.
        </p>
      </div>
    </section>

    <!-- Search and Filter -->
    <section class="py-8 bg-white border-b">
      <div class="container mx-auto px-4">
        <div class="flex flex-col lg:flex-row gap-6 items-center">
          <div class="flex-1 relative">
            <input
              type="text"
              placeholder="Search articles..."
              class="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              id="search-input"
            >
            <svg class="w-5 h-5 text-gray-400 absolute left-4 top-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </div>
          
          <div class="flex gap-4">
            <select class="px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500" id="category-filter">
              <option value="">All Categories</option>
              {categories.map(category => (
                <option value={category}>{category.charAt(0).toUpperCase() + category.slice(1).replace('-', ' ')}</option>
              ))}
            </select>
            
            <select class="px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500" id="sort-filter">
              <option value="newest">Newest First</option>
              <option value="oldest">Oldest First</option>
              <option value="popular">Most Popular</option>
            </select>
          </div>
        </div>
      </div>
    </section>

    {featuredPosts.length > 0 && (
      <!-- Featured Posts -->
      <section class="py-12">
        <div class="container mx-auto px-4">
          <h2 class="text-3xl font-bold text-gray-900 mb-8">Featured Articles</h2>
          
          <div class="grid lg:grid-cols-2 gap-8 mb-12">
            {featuredPosts.slice(0, 2).map(post => (
              <article class="group bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 overflow-hidden">
                <div class="relative">
                  <div class="aspect-video bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center">
                    <svg class="w-16 h-16 text-white/80" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
                    </svg>
                  </div>
                  <div class="absolute top-4 left-4">
                    <span class="bg-white/90 text-blue-600 px-3 py-1 rounded-full text-sm font-medium">Featured</span>
                  </div>
                  <div class="absolute bottom-4 right-4">
                    <span class="bg-black/70 text-white px-2 py-1 rounded text-sm">{post.data.readTime} min read</span>
                  </div>
                </div>
                
                <div class="p-8">
                  <div class="flex items-center gap-4 mb-4">
                    <span class={`px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(post.data.category)}`}>
                      {post.data.category.charAt(0).toUpperCase() + post.data.category.slice(1).replace('-', ' ')}
                    </span>
                    <span class="text-gray-500 text-sm">{formatDate(post.data.publishDate)}</span>
                  </div>
                  
                  <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors">
                    <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                  </h3>
                  
                  <p class="text-gray-600 mb-4 line-clamp-3">{post.data.description}</p>
                  
                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                      <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold">
                        {post.data.author.split(' ').map(n => n[0]).join('')}
                      </div>
                      <span class="text-gray-700 font-medium">{post.data.author}</span>
                    </div>
                    
                    <a 
                      href={`/blog/${post.slug}`}
                      class="text-blue-600 font-semibold hover:text-blue-700 transition-colors"
                    >
                      Read More â†’
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- All Posts -->
    <section class="py-12 bg-white">
      <div class="container mx-auto px-4">
        <div class="flex items-center justify-between mb-8">
          <h2 class="text-3xl font-bold text-gray-900">All Articles</h2>
          <div class="text-sm text-gray-500">
            Showing {allBlogPosts.length} articles
          </div>
        </div>
        
        <div class="grid lg:grid-cols-3 gap-8" id="posts-grid">
          {sortedPosts.map(post => (
            <article class="group bg-white rounded-xl border hover:shadow-lg transition-all duration-300 p-6" data-category={post.data.category}>
              <div class="flex items-center gap-3 mb-4">
                <span class={`px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(post.data.category)}`}>
                  {post.data.category.charAt(0).toUpperCase() + post.data.category.slice(1).replace('-', ' ')}
                </span>
                {post.data.featured && (
                  <span class="bg-yellow-100 text-yellow-600 px-2 py-1 rounded text-xs font-medium">Featured</span>
                )}
              </div>
              
              <h3 class="text-lg font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors">
                <a href={`/blog/${post.slug}`} class="hover:underline">{post.data.title}</a>
              </h3>
              
              <p class="text-gray-600 text-sm mb-4 line-clamp-3">{post.data.description}</p>
              
              <div class="flex items-center justify-between text-sm">
                <div class="flex items-center space-x-2">
                  <div class="w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                    {post.data.author.split(' ').map(n => n[0]).join('')}
                  </div>
                  <span class="text-gray-700">{post.data.author}</span>
                </div>
                
                <div class="flex items-center space-x-4 text-gray-500">
                  <span>{formatDate(post.data.publishDate)}</span>
                  <span>{post.data.readTime} min read</span>
                </div>
              </div>
              
              <div class="mt-4 pt-4 border-t border-gray-200">
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.slice(0, 3).map(tag => (
                    <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded text-xs">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>

    <!-- Newsletter Signup -->
    <section class="py-20 bg-gradient-to-br from-blue-600 to-purple-600 text-white">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-4xl md:text-5xl font-bold mb-6">Stay Updated</h2>
        <p class="text-xl mb-8 max-w-2xl mx-auto text-blue-100">
          Get the latest learning tips, tech insights, and career advice delivered to your inbox.
        </p>
        
        <form class="max-w-md mx-auto flex gap-4">
          <input
            type="email"
            placeholder="Enter your email"
            class="flex-1 px-4 py-3 rounded-lg text-gray-900 focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-blue-600"
            required
          >
          <button
            type="submit"
            class="bg-white text-blue-600 px-6 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors"
          >
            Subscribe
          </button>
        </form>
        
        <p class="text-sm text-blue-200 mt-4">
          No spam, unsubscribe at any time
        </p>
      </div>
    </section>
  </main>

  <script>
    // Search functionality
    const searchInput = document.getElementById('search-input');
    const categoryFilter = document.getElementById('category-filter');
    const sortFilter = document.getElementById('sort-filter');
    const postsGrid = document.getElementById('posts-grid');

    function filterPosts() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedCategory = categoryFilter.value;
      const posts = Array.from(postsGrid.children);

      posts.forEach(post => {
        const title = post.querySelector('h3').textContent.toLowerCase();
        const description = post.querySelector('p').textContent.toLowerCase();
        const category = post.dataset.category;

        const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
        const matchesCategory = !selectedCategory || category === selectedCategory;

        if (matchesSearch && matchesCategory) {
          post.style.display = 'block';
        } else {
          post.style.display = 'none';
        }
      });
    }

    searchInput?.addEventListener('input', filterPosts);
    categoryFilter?.addEventListener('change', filterPosts);

    // Newsletter form
    const newsletterForm = document.querySelector('form');
    newsletterForm?.addEventListener('submit', (e) => {
      e.preventDefault();
      const email = e.target.querySelector('input[type="email"]').value;
      alert(`Thank you for subscribing with ${email}!`);
      e.target.reset();
    });
  </script>
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>